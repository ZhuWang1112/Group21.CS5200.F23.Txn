"0","df.flights <- sqldf("""
"0","  SELECT 1 AS fid, "
"0","  flight_date,"
"0","  1 AS origin,"
"0","  airport,"
"0","  airline,"
"0","  aircraft,"
"0","  altitude_ft AS altitude,"
"0","  heavy_flag,"
"0","  rid"
"0","  FROM `df.raw`"
"0",""")"
"0",""
"0","# get the total rows of the df, then create synthetic primary key"
"0","n.flights <- nrow(df.flights)"
"0",""
"0","for (i in 1: n.flights) {"
"0","  "
"0","  df.flights$fid[i] <- i"
"0","  "
"0","  # about the data 11/23/2000  12:00:00 AM -> 11/23/2000"
"0","  old.date <- df.flights$flight_date[i]"
"0","  if (!is.na(old.date) && old.date != '') {"
"0","    temp.date <- as.Date(old.date, format = ""%m/%d/%y"")"
"0","    df.flights$flight_date[i] = as.character(temp.date)"
"0","  }"
"0","  "
"0","# set the foreign id of airport ----> origin"
"0","  aid <- df.airports$aid[which(df.airports$airportName == df.flights$airport[i])]"
"0","  "
"0","  # if there is no airport, link it to a sentinel airport ""unknown"""
"0","  if (length(aid) == 0 || is.null(aid)) {"
"0","    aid <- 1"
"0","  }"
"0","  df.flights$origin[i] <- aid"
"0","  "
"0","# if there is no airline, set it ""unknown"" in stead of leaving it empty"
"0","  if (length(df.flights$airline[i]) == 0 || is.na(df.flights$airline[i]) "
"0","                                          || df.flights$airline[i] == '') {"
"0","    df.flights$airline[i] <- 'unknown'"
"0","  }"
"0","  "
"0","  if (df.flights$heavy_flag[i] == 'Yes') {"
"0","      df.flights$heavy[i] <- 1"
"0","    } else if (df.flights$heavy_flag[i] == 'No') {"
"0","      df.flights$heavy[i] <- 0"
"0","    } else {"
"0","      df.flights$heavy[i] <- NA"
"0","    }"
"0","}"
"0",""
"0","df.flights$date = as.Date(df.flights$flight_date)"
"0","df.flights$heavy <- as.integer(df.flights$heavy)"
"0","df.flights$altitudeInt <- as.integer(gsub("","", """", df.flights$altitude))"
"0",""
"0","new.df.flights <- sqldf("""
"0","  SELECT fid, date, origin, airline, aircraft, altitudeInt AS altitude, heavy"
"0","  FROM `df.flights`"
"0",""")"
"0",""
"0","dbWriteTable(mydb, ""flights"", new.df.flights, overwrite = FALSE, append = TRUE, row.names = FALSE)"
"1","[1]"
"1"," TRUE"
"1","
"
"0","# check"
"0","#dbReadTable(mydb, 'flights')"
